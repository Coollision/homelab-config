vault:
  addr: http://vault.secrets.svc.cluster.local:8200
  role: argocd-role

ingress:
  host: argocd.<secret:kv/data/domains~domain>

argo-cd:
  fullnameOverride: argocd
  # global:
  #   domain: argocd.<secret:kv/data/domains~domain>
  crds:
    keep: false
  configs:
    cm:
      exec.enabled: "true"
      timeout.reconciliation: 180s
      resource.exclusions: |
        # ### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter
        # - apiGroups:
        #   - ''
        #   - discovery.k8s.io
        #   kinds:
        #   - Endpoints
        #   - EndpointSlice
        ### Internal Kubernetes resources excluded reduce the number of watched events
        - apiGroups:
          - coordination.k8s.io
          kinds:
          - Lease
        ### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events
        - apiGroups:
          - authentication.k8s.io
          - authorization.k8s.io
          kinds:
          - SelfSubjectReview
          - TokenReview
          - LocalSubjectAccessReview
          - SelfSubjectAccessReview
          - SelfSubjectRulesReview
          - SubjectAccessReview
        ### Intermediate Certificate Request excluded reduce the number of watched events
        - apiGroups:
          - certificates.k8s.io
          kinds:
          - CertificateSigningRequest
        - apiGroups:
          - cert-manager.io
          kinds:
          - CertificateRequest
        ### Cilium internal resources excluded reduce the number of watched events and UI Clutter
        - apiGroups:
          - cilium.io
          kinds:
          - CiliumIdentity
          - CiliumEndpoint
          - CiliumEndpointSlice
        ### Kyverno intermediate and reporting resources excluded reduce the number of watched events and improve performance
        - apiGroups:
          - kyverno.io
          - reports.kyverno.io
          - wgpolicyk8s.io
          kinds:
          - PolicyReport
          - ClusterPolicyReport
          - EphemeralReport
          - ClusterEphemeralReport
          - AdmissionReport
          - ClusterAdmissionReport
          - BackgroundScanReport
          - ClusterBackgroundScanReport
          - UpdateRequest

    params:
      server.insecure: true
      server.disable.auth: false

    cmp:
      create: true
      plugins:
        argocd-vault-replacer:
          generate:
            command: [ "argocd-vault-replacer" ]
        kustomize-argocd-vault-replacer:
          generate:
            command: [ "sh", "-c" ]
            args: [ "kustomize", "build", ".", "|", "argocd-vault-replacer" ]
        helm-argocd-vault-replacer:
          init:
            command: [ "/bin/sh", "-c" ]
            args: [ "helm dependency build" ]
          generate:
            command: [ sh, -c ]
            args: [ "helm template -n $ARGOCD_APP_NAMESPACE $ARGOCD_APP_NAME . | argocd-vault-replacer" ]

  controller:
    revisionHistoryLimit: 3
    # resources:
    #   requests:
    #     memory: 600Mi
    #     # cpu: 500m
    #   limits:
    #     memory: 700Mi
    #     # cpu: 1

  notifications:
    enabled: false

  repoServer:
    # resources:
    #   requests:
    #     memory: 300Mi
    #     # cpu: 200m
    #   limits:
    #     memory: 400Mi
    #     # cpu: 300m
    serviceAccount:
      name: argocd-role
    extraContainers:
      - name: avp
        command: [ /var/run/argocd/argocd-cmp-server ]
        image: ghcr.io/crumbhole/lovely-vault-ver:1.2.2
        envFrom:
          - secretRef:
              name: argocd-vault-replacer-credentials
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /tmp
            name: cmp-tmp

          # Register plugins into sidecar
          - mountPath: /home/argocd/cmp-server/config/plugin
            subPath: argocd-vault-plugin.yaml
            name: argocd-cmp-cm

    volumes:
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      - name: cmp-tmp
        emptyDir: { }
      - name: custom-tools
        emptyDir: { }

  # applicationSet:
    # resources:
    #   requests:
    #     memory: 50Mi
    #     # cpu: 10m
    #   limits:
    #     memory: 80Mi
    #     # cpu: 20m

  # dex:
    # resources:
    #   requests:
    #     memory: 35Mi
    #     # cpu: 10m
    #   limits:
    #     memory: 50Mi
    #     # cpu: 10m
  
  # redis:
    # resources:
    #   requests:
    #     memory: 10Mi
    #     # cpu: 15m
    #   limits:
    #     memory: 15Mi
    #     # cpu: 20m