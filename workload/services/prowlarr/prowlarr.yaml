apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config
  namespace: services
  annotations:
    nfs.io/storage-path: "prowlarr/config"
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prowlarr
  namespace: services
spec:
  serviceName: prowlarr
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
      name: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
        name: prowlarr
    spec:
      initContainers:
        - name: prowlarr-init
          image: alpine
          command: 
            - "/bin/sh"
            - "-c"
            - cp /init/script.sh /tmp && chmod +x /tmp/script.sh && /tmp/script.sh
          resources: {}
          env:
            - name: CONFIG_FILE
              value: "../config/config.xml"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: services-db
                  key: prowlarr_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: services-db
                  key: prowlarr_password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: service-db
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: service-db
                  key: port
            - name: POSTGRES_MAIN_DB
              valueFrom:
                configMapKeyRef:
                  name: service-db
                  key: prowlarr_database
            - name: POSTGRES_LOG_DB
              valueFrom:
                configMapKeyRef:
                  name: service-db
                  key: prowlarr_database_logs
          volumeMounts:
            - mountPath: /init
              name: arr-init-script
              readOnly: false
            - mountPath: /config
              name: prowlarr-config
      containers:
        - image: linuxserver/prowlarr:1.34.1
          name: prowlarr
          imagePullPolicy: Always
          env:
            - name: TZ
              value: Europe/Brussels
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - containerPort: 9696
              name: web
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: prowlarr-config
            - mountPath: /thing
              name: arr-init-script
      securityContext:
        fsGroup: 1000
      volumes:
        - name: arr-init-script
          configMap:
            name: arr-init-script
        - name: prowlarr-config
          persistentVolumeClaim:
            claimName: prowlarr-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prowlarr
  name: prowlarr-web
  namespace: services
spec:
  ports:
    - name: web
      port: 9696
      targetPort: web
  selector:
    name: prowlarr
    app: prowlarr
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prowlarr-ingress
  namespace: services
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`prowlarr.<secret:kv/data/domains~local>`)
      priority: 0
      services:
        - kind: Service
          name: prowlarr-web
          namespace: services
          port: 9696

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prowlarr-ingress-secure
  namespace: services
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: host(`prowlarr.<secret:kv/data/domains~domain>`)
      priority: 0
      services:
        - kind: Service
          name: prowlarr-web
          namespace: services
          port: 9696
  tls: {}


# pgloader --with "quote identifiers" --with "data only" --with "prefetch rows = 100" --with "batch size = 1MB" prowlarr.db 'postgresql://user:password@postgres-deployment-postgresql-hl/prowlarr_main'
